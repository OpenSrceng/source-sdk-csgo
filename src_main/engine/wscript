#! /usr/bin/env python

class File:
	def __init__(self, name, fnFilter = None):
		self.name = name
		self.fnFilter = fnFilter
	def is_enabled(self, ctx):
		if self.fnFilter:
			return self.fnFilter(ctx)
		return True

def options(opt):
	pass

def configure(conf):
	conf.env.append_unique('DEFINES', ['USE_CONVARS','VOICE_OVER_IP','BUMPMAP','__USEA3D','_ADD_EAX_','ENGINE_DLL','USE_BREAKPAD_HANDLER','PROTOBUF'])
	if conf.env.DEST_OS == 'win32':
		conf.env.append_unique('DEFINES', ['fopen=dont_use_fopen'])
	if conf.options.DEDICATED:
		conf.env.append_unique('DEFINES', ['SWDS'])
 
def build(bld):
	sources = [
		File	(['client_pch.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_rcon.cpp'], lambda x: not x.options.DEDICATED),
		File	(['rpt_engine.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_steamauth.cpp'], lambda x: not x.options.DEDICATED),
		File	(['clientframe.cpp']),
		File	(['decal_clip.cpp']),
		File	(['demofile.cpp']),
		File	(['demostreamhttp.cpp']),
		File	(['demostream.cpp']),
		File	(['demobuffer.cpp']),
		File	(['DevShotGenerator.cpp']),
		File	(['OcclusionSystem.cpp']),
		File	(['tmessage.cpp']),
		File	(['r_efx.cpp'], lambda x: not x.options.DEDICATED),
		File	(['view.cpp'], lambda x: not x.options.DEDICATED),
		File	(['baseclientstate.cpp']),
		File	(['cbenchmark.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cdll_engine_int.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_main.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_demo.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_broadcast.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_null.cpp'], lambda x: x.options.DEDICATED),
		File	(['cl_demoaction.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_demoaction_types.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_demoactioneditors.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_demoactionmanager.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_demoeditorpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_demosmootherpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_demouipanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_foguipanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_txviewpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_entityreport.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_ents_parse.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_localnetworkbackdoor.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_parse_event.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_pluginhelpers.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_pred.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_splitscreen.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cl_texturelistpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['client.cpp'], lambda x: not x.options.DEDICATED),
		File	(['colorcorrectionpanel.cpp']),
		File	(['console.cpp']),
		File	(['render_pch.cpp']),
		File	(['buildcubemaps.cpp'], lambda x: not x.options.DEDICATED),
		File	(['buildmodelforworld.cpp'], lambda x: not x.options.DEDICATED),
		File	(['debug_leafvis.cpp'], lambda x: not x.options.DEDICATED),
		File	(['debugoverlay.cpp'], lambda x: not x.options.DEDICATED),
		File	(['decals.cpp']),
		File	(['disp.cpp']),
		File	(['disp_interface.cpp']),
		File	(['disp_mapload.cpp']),
		File	(['gl_draw.cpp']),
		File	(['gl_rsurf.cpp']),
		File	(['brushbatchrender.cpp'], lambda x: not x.options.DEDICATED),
		File	(['gl_shader.cpp']),
		File	(['gl_drawlights.cpp'], lambda x: not x.options.DEDICATED),
		File	(['gl_lightmap.cpp'], lambda x: not x.options.DEDICATED),
		File	(['gl_matsysiface.cpp'], lambda x: not x.options.DEDICATED),
		File	(['gl_rlight.cpp'], lambda x: not x.options.DEDICATED),
		File	(['gl_rmain.cpp'], lambda x: not x.options.DEDICATED),
		File	(['gl_rmisc.cpp'], lambda x: not x.options.DEDICATED),
		File	(['gl_screen.cpp'], lambda x: not x.options.DEDICATED),
		File	(['gl_warp.cpp'], lambda x: not x.options.DEDICATED),
		File	(['l_studio.cpp']),
		File	(['matsys_interface.cpp']),
		File	(['modelloader.cpp']),
		File	(['Overlay.cpp'], lambda x: not x.options.DEDICATED),
		File	(['r_areaportal.cpp'], lambda x: not x.options.DEDICATED),
		File	(['r_decal.cpp']),
		File	(['r_linefile.cpp'], lambda x: not x.options.DEDICATED),
		File	(['shadowmgr.cpp'], lambda x: not x.options.DEDICATED),
		File	(['server_pch.cpp']),
		File	(['sv_ipratelimit.cpp']),
		File	(['sv_rcon.cpp']),
		File	(['sv_steamauth.cpp']),
		File	(['sv_uploaddata.cpp']),
		File	(['sv_uploadgamestats.cpp']),
		File	(['baseclient.cpp']),
		File	(['sv_main.cpp']),
		File	(['sv_client.cpp']),
		File	(['sv_ents_write.cpp']),
		File	(['sv_filter.cpp']),
		File	(['sv_framesnapshot.cpp']),
		File	(['sv_log.cpp']),
		File	(['sv_master.cpp']),
		File	(['sv_packedentities.cpp']),
		File	(['sv_plugin.cpp']),
		File	(['sv_precache.cpp']),
		File	(['sv_redirect.cpp']),
		File	(['sv_remoteaccess.cpp']),
		File	(['vengineserver_impl.cpp']),
		File	(['baseautocompletefilelist.cpp']),
		File	(['baseserver.cpp']),
		File	(['bitbuf_errorhandler.cpp']),
		File	(['blackbox.cpp']),
		File	(['../public/blockingudpsocket.cpp']),
		File	(['../public/bsptreedata.cpp']),
		File	(['../public/builddisp.cpp']),
		File	(['buildnum.cpp']),
		File	(['changeframelist.cpp']),
		File	(['checksum_engine.cpp']),
		File	(['clockdriftmgr.cpp']),
		File	(['cl_bounded_cvars.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cmd.cpp']),
		File	(['cmodel.cpp']),
		File	(['cmodel_bsp.cpp']),
		File	(['cmodel_disp.cpp']),
		File	(['../public/collisionutils.cpp']),
		File	(['common.cpp']),
		File	(['../public/crtmemdebug.cpp']),
		File	(['cvar.cpp']),
		File	(['../public/disp_common.cpp']),
		File	(['disp_defs.cpp']),
		File	(['disp_helpers.cpp']),
		File	(['../public/disp_powerinfo.cpp']),
		File	(['../public/dispcoll_common.cpp']),
		File	(['DownloadListGenerator.cpp']),
		File	(['downloadthread.cpp']),
		File	(['dt.cpp']),
		File	(['dt_common_eng.cpp']),
		File	(['dt_encode.cpp']),
		File	(['dt_instrumentation.cpp']),
		File	(['dt_instrumentation_server.cpp']),
		File	(['dt_localtransfer.cpp']),
		File	(['../public/dt_recv.cpp']),
		File	(['dt_recv_decoder.cpp']),
		File	(['dt_recv_eng.cpp']),
		File	(['../public/dt_send.cpp']),
		File	(['dt_send_eng.cpp']),
		File	(['dt_stack.cpp']),
		File	(['dt_test.cpp']),
		File	(['../public/dt_utlvector_common.cpp']),
		File	(['../public/dt_utlvector_recv.cpp']),
		File	(['../public/dt_utlvector_send.cpp']),
		File	(['enginesingleuserfilter.cpp']),
		File	(['enginestats.cpp']),
		File	(['enginethreads.cpp']),
		File	(['enginetrace.cpp']),
		File	(['filesystem_engine.cpp']),
		File	(['../public/filesystem_helpers.cpp']),
		File	(['../public/filesystem_init.cpp']),
		File	(['filetransfermgr.cpp']),
		File	(['GameEventManager.cpp']),
		File	(['GameEventManagerOld.cpp']),
		File	(['gameeventtransmitter.cpp']),
		File	(['gametrace_engine.cpp']),
		File	(['hltvclient.cpp']),
		File	(['hltvclientstate.cpp']),
		File	(['hltvdemo.cpp']),
		File	(['hltvbroadcast.cpp']),
		File	(['hltvserver.cpp']),
		File	(['hltvtest.cpp']),
		File	(['host.cpp']),
		File	(['host_cmd.cpp']),
		File	(['host_listmaps.cpp']),
		File	(['host_phonehome.cpp']),
		File	(['host_state.cpp']),
		File	(['imagepacker.cpp']),
		File	(['initmathlib.cpp']),
		File	(['../common/language.cpp']),
		File	(['LocalNetworkBackdoor.cpp']),
		File	(['LoadScreenUpdate.cpp'], lambda x: not x.options.DEDICATED),
		File	(['../public/lumpfiles.cpp']),
		File	(['MapReslistGenerator.cpp']),
		File	(['materialproxyfactory.cpp']),
		File	(['mem_fgets.cpp']),
		File	(['mod_vis.cpp']),
		File	(['ModelInfo.cpp']),
		File	(['netconsole.cpp']),
		File	(['net_chan.cpp']),
		File	(['net_support.cpp']),
		File	(['net_synctags.cpp']),
		File	(['net_ws.cpp']),
		File	(['net_ws_queued_packet_sender.cpp']),
		File	(['net_steamsocketmgr.cpp']),
		File	(['../common/netmessages.cpp']),
		File	(['../common/steamid.cpp']),
		File	(['networkstringtable.cpp']),
		File	(['NetworkStringTableItem.cpp']),
		File	(['networkstringtableserver.cpp']),
		File	(['../public/networkvar.cpp']),
		File	(['packed_entity.cpp']),
		File	(['pure_server.cpp']),
		File	(['pr_edict.cpp']),
		File	(['precache.cpp']),
		File	(['quakedef.cpp']),
		File	(['randomstream.cpp']),
		File	(['../common/randoverride.cpp']),
		File	(['../public/registry.cpp']),
		File	(['replay.cpp']),
		File	(['replayclient.cpp']),
		File	(['replayhistorymanager.cpp']),
		File	(['replaydemo.cpp']),
		File	(['replayserver.cpp']),
		File	(['../public/sentence.cpp']),
		File	(['singleplayersharedmemory.cpp']),
		File	(['sound_shared.cpp']),
		File	(['spatialpartition.cpp']),
		File	(['staticpropmgr.cpp']),
		File	(['status.cpp']),
		File	(['../public/studio.cpp']),
		File	(['sys_dll.cpp']),
		File	(['sys_dll2.cpp']),
		File	(['sys_engine.cpp']),
		File	(['sys_mainwind.cpp'], lambda x: not x.options.DEDICATED),
		File	(['sys_linuxwind.cpp'], lambda x: x.env.DEST_OS == 'linux'),
		File	(['testscriptmgr.cpp']),
		File	(['traceinit.cpp']),
		File	(['../public/vallocator.cpp']),
		File	(['voiceserver_impl.cpp']),
		File	(['vprof_engine.cpp']),
		File	(['vprof_record.cpp']),
		File	(['world.cpp']),
		File	(['../public/XZip.cpp']),
		File	(['../public/XUnzip.cpp']),
		File	(['zone.cpp']),
		File	(['bugreporter.cpp'], lambda x: not x.options.DEDICATED),
		File	(['cheatcodes.cpp']),
		File	(['download.cpp']),
		File	(['../public/editor_sendcommand.cpp']),
		File	(['host_saverestore.cpp'], lambda x: not x.options.DEDICATED),
		File	(['keys.cpp']),
		File	(['lightcache.cpp'], lambda x: not x.options.DEDICATED),
		File	(['networkstringtableclient.cpp']),
		File	(['saverestore_filesystem_passthrough.cpp'], lambda x: not x.options.DEDICATED),
		File	(['saverestore_filesystem.cpp'], lambda x: not x.options.DEDICATED),
		File	(['../public/scratchpad3d.cpp']),
		File	(['servermsghandler.cpp']),
		File	(['sys_getmodes.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_askconnectpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_watermark.cpp'], lambda x: not x.options.DEDICATED),
		File	(['xboxsystem.cpp']),
		File	(['../common/SourceAppInfo.cpp']),
		File	(['ipc_console.cpp'], lambda x: x.env.DEST_OS == 'win32'),
		File	(['paint.cpp']),
		File	(['../public/phonemeconverter.cpp']),
		File	(['snd_io.cpp']),
		File	(['EngineSoundServer.cpp']),
		File	(['EngineSoundClient.cpp'], lambda x: not x.options.DEDICATED),
		File	(['engsoundservice.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/voice_wavefile.cpp']),
		File	(['audio/private/MPAFile.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/MPAHeader.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_posix.cpp'], lambda x: x.env.DEST_OS != 'win32'),
		File	(['audio/private/windows_audio.cpp'], lambda x: x.env.DEST_OS == 'win32'),
		File	(['audio/audio_pch.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/vox.cpp']),
		File	(['audio/private/snd_dev_common.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_dma.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_mixgroups.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_dsp.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_mix.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_system.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_entry_match_system.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_block_entry.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_convar.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_dashboard.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_delta.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_distant_dsp.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_entry_time.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_entity_info.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_falloff.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_filters.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_iterate_merge_speakers.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_map_name.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_math.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_mixer.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_mixlayer.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_occlusion.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_opvar.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_output.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_platform.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_player_info.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_pos_vec8.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_source_info.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_spatialize.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_start_entry.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_stop_entry.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_sys_time.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_tracks.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_op_sys/sos_op_util.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_sentence_mixer.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_wave_data.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_wave_mixer.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_wave_mixer_adpcm.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_wave_source.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_wave_temp.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_win.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/voice_gain.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_dev_direct.cpp'], lambda x: x.env.DEST_OS == 'win32'),
		File	(['audio/private/snd_mp3_source.cpp'], lambda x: not (x.options.DEDICATED and x.env.DEST_OS == 'linux')),
		File	(['audio/private/snd_wave_mixer_mp3.cpp'], lambda x: not (x.options.DEDICATED and x.env.DEST_OS == 'linux')),
		File	(['audio/private/VBRHeader.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/voice.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/voice_mixer_controls.cpp'], lambda x: x.env.DEST_OS == 'win32'),
		File	(['audio/private/voice_record_dsound.cpp'], lambda x: x.env.DEST_OS == 'win32'),
		File	(['audio/private/voice_sound_engine_interface.cpp'], lambda x: not x.options.DEDICATED),
		File	(['audio/private/snd_stubs.cpp']),
		File	(['audio/private/voice_mixer_controls_openal.cpp'], lambda x: not (x.options.DEDICATED and x.env.DEST_OS == 'linux')),
		File	(['audio/private/voice_record_openal.cpp'], lambda x: not (x.options.DEDICATED and x.env.DEST_OS == 'linux')),
		File	(['../audio/private/voice_record_mac_audioqueue.cpp'], lambda x: x.env.DEST_OS == 'darwin'),
		File	(['../public/vgui_controls/vgui_controls.cpp'], lambda x: not x.options.DEDICATED),
		File	(['../common/vgui/vgui_basebudgetpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['../common/vgui/vgui_budgetbargraphpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['../common/vgui/vgui_budgethistorypanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['../common/vgui/vgui_budgetpanelshared.cpp'], lambda x: not x.options.DEDICATED),
		File	(['perfuipanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_basepanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_baseui_interface.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_budgetpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_DebugSystemPanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_drawtreepanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_helpers.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_texturebudgetpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_vprofgraphpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['vgui_vprofpanel.cpp'], lambda x: not x.options.DEDICATED),
		File	(['serializedentity.cpp']),
		File	(['bsplog.cpp']),
		File	(['../common/protobuf_helpers.cpp']),
		File	(['generated_proto/netmessages.pb.cc']),
		File	(['generated_proto/network_connection.pb.cc']),
		File	(['generated_proto/engine_gcmessages.pb.cc']),
		File	(['../public/tier0/memoverride.cpp'])
	]

	includes = [
		'.',
		'audio',
		'audio/private',
		'audio/private/snd_op_sys',
		'audio/public',
		'generated_proto',
		'../thirdparty/quickhull',
		'../thirdparty/protobuf-2.5.0/src'
	]

	libs = [
		'tier0',
		'tier1',
		'tier2',
		'tier3',
		'interfaces',
		'vstdlib',
		'appframework',
		'bitmap',
		'dmxloader',
		'mathlib',
		'matsys_controls',
		'soundsystem_lowlevel',
		'vtf',
		'bzip2',
		'protobuf',
		'curl',
		'openal-soft'
	]

	if not bld.options.DEDICATED:
		libs += [
			'vgui_controls'
		]
		if bld.env.DEST_OS == 'linux':
			libs += [
				'videocfg'
			]

	sources_platform = []
	for i in sources:
		if not i.is_enabled(bld):
			continue
		sources_platform += i.name

	bld.shlib(
		target   = 'engine',
		features = 'c cxx',
		source   = sources_platform,
		includes = includes,
		use      = libs,
		install_path = bld.env.BINDIR,
		subsystem = bld.env.MSVC_SUBSYSTEM
	)
