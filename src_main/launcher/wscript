#! /usr/bin/env python

class File:
	def __init__(self, name, fnFilter = None):
		self.name = name
		self.fnFilter = fnFilter
	def is_enabled(self, ctx):
		if self.fnFilter:
			return self.fnFilter(ctx)
		return True

def options(opt):
	pass

def configure(conf):
	conf.env.append_unique('DEFINES', ['LAUNCHERONLY'])
 
def build(bld):
	sources = [
		File	(['../public/filesystem_init.cpp']),
		File	(['launcher.cpp']),
		File	(['reslistgenerator.cpp']),
		File	(['../public/tier0/memoverride.cpp']),
	]

	includes = []

	libs = [
		'tier0',
		'tier1',
		'tier2',
		'tier3',
		'interfaces',
		'vstdlib',
		'appframework',
		'togl'
	]

	sources_platform = []
	for i in sources:
		if not i.is_enabled(bld):
			continue
		sources_platform += i.name

	bld.shlib(
		target   = 'launcher',
		features = 'c cxx',
		source   = sources_platform,
		includes = includes,
		use      = libs,
		install_path = bld.env.BINDIR,
		subsystem = bld.env.MSVC_SUBSYSTEM
	)
