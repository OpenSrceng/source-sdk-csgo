#! /usr/bin/env python

class File:
	def __init__(self, name, fnFilter = None):
		self.name = name
		self.fnFilter = fnFilter
	def is_enabled(self, ctx):
		if self.fnFilter:
			return self.fnFilter(ctx)
		return True

def options(opt):
	pass

def configure(conf):
	conf.env.append_unique('DEFINES', ['DMXLOADER_LIB'])

def build(bld):
	sources = [
		File	(['dmxattribute.cpp']),
		File	(['dmxelement.cpp']),
		File	(['dmxloader.cpp']),
		File	(['dmxloadertext.cpp']),
		File	(['dmxserializationdictionary.cpp']),
		File	(['utlsoacontainer_serialization.cpp'])
	]

	includes = []

	libs = []

	sources_platform = []
	for i in sources:
		if not i.is_enabled(bld):
			continue
		sources_platform += i.name

	bld.stlib(
		target   = 'dmxloader',
		features = 'c cxx',
		source   = sources_platform,
		includes = includes,
		use      = libs,
		subsystem = bld.env.MSVC_SUBSYSTEM
	)
